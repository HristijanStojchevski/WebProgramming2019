GET http://localhost:8080/api/ingredients

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}

###
GET http://localhost:8080/api/ingredients
page-size:10

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}

###
GET http://localhost:8080/api/ingredients
page: 1
page-size:2

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 400, "Response status is not 400");
});
%}

###
GET http://localhost:8080/api/ingredients?spicy=true

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}


###
POST http://localhost:8080/api/ingredients

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 400, "Response status is not 400");
});
%}


###
POST http://localhost:8080/api/ingredients
Content-Type: application/x-www-form-urlencoded

name=cheese&spicy=false&amount=100&veggie=false

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 201, "Response status is not 201");
  client.assert(response.headers.valueOf("Location")!= null, "Invalid Location");
  client.assert(response.body.hasOwnProperty("name"), 'Can not find the name');
  client.global.set("newIngredientUrl", response.headers.valueOf("Location"));
  client.global.set("name", response.body["name"]);
});
%}



###
GET {{newIngredientUrl}}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}

###
PATCH http://localhost:8080/api/ingredients/{{name}}
Content-Type: application/x-www-form-urlencoded

spicy=true&amount=50&veggie=false

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 201");
  client.assert(response.body.hasOwnProperty("name"), 'Can not find the name');
});
%}

###
GET {{newIngredientUrl}}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}

###
DELETE {{newIngredientUrl}}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}

###

GET http://localhost:8080/api/pizzas

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}

###
GET http://localhost:8080/api/pizzas?totalIngredients=10

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}


###
POST http://localhost:8080/api/pizzas

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 400, "Response status is not 400");
});
%}


###
POST http://localhost:8080/api/pizzas
Content-Type: application/x-www-form-urlencoded

name=Mexicana&description=MadeNotInMexico&ingredients=salsa,cheese,tomatoSauce,sausages&veggie=false

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 201, "Response status is not 201");
  client.assert(response.headers.valueOf("Location")!= null, "Invalid Location");
  client.assert(response.body.hasOwnProperty("name"), 'Can not find the name');
  client.global.set("newPizzaUrl", response.headers.valueOf("Location"));
  client.global.set("name", response.body["name"]);
});
%}



###
GET {{newPizzaUrl}}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}

###
PATCH http://localhost:8080/api/pizzas/{{id}}
Content-Type: application/x-www-form-urlencoded

desc=NewDescription&ingredients=cheese&veggie=true

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 201");
  client.assert(response.body.hasOwnProperty("name"), 'Can not find the name');
});
%}

###
GET {{newPizzaUrl}}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}

###
DELETE {{newPizzaUrl}}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}

###

